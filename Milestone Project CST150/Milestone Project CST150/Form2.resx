<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>